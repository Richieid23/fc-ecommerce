version: "3.8"

services:
#  app:
#    build: .
#    ports:
#      - "8080:8080"
#    environment:
#      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/db_fc_ecommerce
#      - SPRING_DATASOURCE_USERNAME=ecommerce_user
#      - SPRING_DATASOURCE_PASSWORD=@pguser123
#    depends_on:
#      - db
#      - redis
#    logging:
#      driver: "json-file"
#      options:
#        max-size: "200k"
#        max-file: "10"

  db:
    image: postgres:13
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_DB=db_fc_ecommerce
      - POSTGRES_USER=ecommerce_user
      - POSTGRES_PASSWORD=@pguser123
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-sonarqube-db.sh:/docker-entrypoint-initdb.d/init-sonarqube-db.sh
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ecommerce_user -d db_fc_ecommerce" ]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7.4
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: always

  sonarqube:
    image: sonarqube:community
    ports:
      - "9000:9000"
    environment:
      - SONAR_JDBC_URL=jdbc:postgresql://db:5432/sonar
      - SONAR_JDBC_USERNAME=sonar
      - SONAR_JDBC_PASSWORD=sonar
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extension
      - sonarqube_logs:/opt/sonarqube/logs
    depends_on:
      - db

volumes:
  postgres_data:
  redis_data:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs: